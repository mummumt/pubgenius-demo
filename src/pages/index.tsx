import { trpc } from '@/utils/trpc'
import Head from 'next/head'
import Image from 'next/image'
import styles from '../styles/Home.module.css'

export default function Home() {
  const hello = trpc.hello.useQuery(undefined, { staleTime: Infinity })

  const createUserMutation = trpc.auth.register.useMutation()
  const loginUserMutation = trpc.auth.login.useMutation()
  const logoutUserMutation = trpc.auth.logout.useMutation()

  const userQuery = trpc.user.me.useQuery(undefined, { staleTime: Infinity, refetchOnWindowFocus: false, retry: false })
  const utils = trpc.useContext()

  if (!hello.data) {
    return <div>Loading...</div>
  }

  const handleOnClick: React.MouseEventHandler<HTMLButtonElement> = (e) => {
    createUserMutation.mutate(
      { username: '12345', password: '12345678', passwordConfirm: '12345678' },
      {
        onSuccess: (result) => {
          console.log(result)
        },
      },
    )
  }

  const handleOnClickLogIn: React.MouseEventHandler<HTMLButtonElement> = (e) => {
    loginUserMutation.mutate(
      { username: '12345', password: '12345678' },
      {
        onSuccess: (result) => {
          utils.user.me.invalidate()
          console.log(result)
        },
      },
    )
  }

  const handleOnClickLogOut: React.MouseEventHandler<HTMLButtonElement> = (e) => {
    logoutUserMutation.mutate(undefined, {
      onSuccess: (result) => {
        utils.user.me.invalidate()
        console.log(result)
      },
    })
  }

  return (
    <div className={styles.container}>
      <Head>
        <title>Create Next App Haha</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <button onClick={handleOnClick}>{userQuery.data?.data.user?.username || 'Create a User'} </button>
      <button onClick={handleOnClickLogIn}>Login</button>
      <button onClick={handleOnClickLogOut}>Logout</button>
      <main className={styles.main}>
        <h1>Welcome {userQuery.data?.data.user?.username}HAHA</h1>

        <p className={styles.description}>{hello.data.greeting}</p>

        <div className={styles.grid}>
          <a href="https://nextjs.org/docs" className={styles.card}>
            <h2>Documentation &rarr;</h2>
            <p>Find in-depth information about Next.js features and API.</p>
          </a>

          <a href="https://nextjs.org/learn" className={styles.card}>
            <h2>Learn &rarr;</h2>
            <p>Learn about Next.js in an interactive course with quizzes!</p>
          </a>

          <a href="https://github.com/vercel/next.js/tree/canary/examples" className={styles.card}>
            <h2>Examples &rarr;</h2>
            <p>Discover and deploy boilerplate example Next.js projects.</p>
          </a>

          <a
            href="https://vercel.com/new?utm_source=create-next-app&utm_medium=default-template&utm_campaign=create-next-app"
            target="_blank"
            rel="noopener noreferrer"
            className={styles.card}
          >
            <h2>Deploy &rarr;</h2>
            <p>Instantly deploy your Next.js site to a public URL with Vercel.</p>
          </a>
        </div>
      </main>
      <footer className={styles.footer}>
        <a
          href="https://vercel.com?utm_source=create-next-app&utm_medium=default-template&utm_campaign=create-next-app"
          target="_blank"
          rel="noopener noreferrer"
        >
          Powered by{' '}
          <span className={styles.logo}>
            <Image src="/vercel.svg" alt="Vercel Logo" width={72} height={16} />
          </span>
        </a>
      </footer>
    </div>
  )
}
